// Generated by jextract

package jdk.internal.include.sys;

import java.lang.foreign.*;
import java.lang.invoke.VarHandle;

import static java.lang.foreign.ValueLayout.PathElement;
public class sa_endpoints {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_INT$LAYOUT.withName("sae_srcif"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("sae_srcaddr"),
        Constants$root.C_INT$LAYOUT.withName("sae_srcaddrlen"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("sae_dstaddr"),
        Constants$root.C_INT$LAYOUT.withName("sae_dstaddrlen"),
        MemoryLayout.paddingLayout(32)
    ).withName("sa_endpoints");
    public static MemoryLayout $LAYOUT() {
        return sa_endpoints.$struct$LAYOUT;
    }
    static final VarHandle sae_srcif$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sae_srcif"));
    public static VarHandle sae_srcif$VH() {
        return sa_endpoints.sae_srcif$VH;
    }
    public static int sae_srcif$get(MemorySegment seg) {
        return (int)sa_endpoints.sae_srcif$VH.get(seg);
    }
    public static void sae_srcif$set(MemorySegment seg, int x) {
        sa_endpoints.sae_srcif$VH.set(seg, x);
    }
    public static int sae_srcif$get(MemorySegment seg, long index) {
        return (int)sa_endpoints.sae_srcif$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sae_srcif$set(MemorySegment seg, long index, int x) {
        sa_endpoints.sae_srcif$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sae_srcaddr$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sae_srcaddr"));
    public static VarHandle sae_srcaddr$VH() {
        return sa_endpoints.sae_srcaddr$VH;
    }
    public static MemorySegment sae_srcaddr$get(MemorySegment seg) {
        return (MemorySegment)sa_endpoints.sae_srcaddr$VH.get(seg);
    }
    public static void sae_srcaddr$set(MemorySegment seg, MemorySegment x) {
        sa_endpoints.sae_srcaddr$VH.set(seg, x);
    }
    public static MemorySegment sae_srcaddr$get(MemorySegment seg, long index) {
        return (MemorySegment)sa_endpoints.sae_srcaddr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sae_srcaddr$set(MemorySegment seg, long index, MemorySegment x) {
        sa_endpoints.sae_srcaddr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sae_srcaddrlen$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sae_srcaddrlen"));
    public static VarHandle sae_srcaddrlen$VH() {
        return sa_endpoints.sae_srcaddrlen$VH;
    }
    public static int sae_srcaddrlen$get(MemorySegment seg) {
        return (int)sa_endpoints.sae_srcaddrlen$VH.get(seg);
    }
    public static void sae_srcaddrlen$set(MemorySegment seg, int x) {
        sa_endpoints.sae_srcaddrlen$VH.set(seg, x);
    }
    public static int sae_srcaddrlen$get(MemorySegment seg, long index) {
        return (int)sa_endpoints.sae_srcaddrlen$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sae_srcaddrlen$set(MemorySegment seg, long index, int x) {
        sa_endpoints.sae_srcaddrlen$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sae_dstaddr$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sae_dstaddr"));
    public static VarHandle sae_dstaddr$VH() {
        return sa_endpoints.sae_dstaddr$VH;
    }
    public static MemorySegment sae_dstaddr$get(MemorySegment seg) {
        return (MemorySegment)sa_endpoints.sae_dstaddr$VH.get(seg);
    }
    public static void sae_dstaddr$set(MemorySegment seg, MemorySegment x) {
        sa_endpoints.sae_dstaddr$VH.set(seg, x);
    }
    public static MemorySegment sae_dstaddr$get(MemorySegment seg, long index) {
        return (MemorySegment)sa_endpoints.sae_dstaddr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sae_dstaddr$set(MemorySegment seg, long index, MemorySegment x) {
        sa_endpoints.sae_dstaddr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sae_dstaddrlen$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sae_dstaddrlen"));
    public static VarHandle sae_dstaddrlen$VH() {
        return sa_endpoints.sae_dstaddrlen$VH;
    }
    public static int sae_dstaddrlen$get(MemorySegment seg) {
        return (int)sa_endpoints.sae_dstaddrlen$VH.get(seg);
    }
    public static void sae_dstaddrlen$set(MemorySegment seg, int x) {
        sa_endpoints.sae_dstaddrlen$VH.set(seg, x);
    }
    public static int sae_dstaddrlen$get(MemorySegment seg, long index) {
        return (int)sa_endpoints.sae_dstaddrlen$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sae_dstaddrlen$set(MemorySegment seg, long index, int x) {
        sa_endpoints.sae_dstaddrlen$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}



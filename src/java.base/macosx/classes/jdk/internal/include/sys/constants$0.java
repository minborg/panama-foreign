// Generated by jextract

package jdk.internal.include.sys;

import jdk.internal.include.common.Constants$root;
import jdk.internal.include.common.RuntimeHelper;

import java.lang.foreign.FunctionDescriptor;
import java.lang.invoke.MethodHandle;

final class constants$0 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$0() {}
    public static final FunctionDescriptor connect$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle connect$MH = RuntimeHelper.downcallHandle(
        "connect",
        constants$0.connect$FUNC
    );
    static final FunctionDescriptor recvfrom$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle recvfrom$MH = RuntimeHelper.downcallHandle(
        "recvfrom",
        constants$0.recvfrom$FUNC
    );
    static final FunctionDescriptor sendto$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sendto$MH = RuntimeHelper.downcallHandle(
        "sendto",
        constants$0.sendto$FUNC
    );
    static final FunctionDescriptor disconnectx$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle disconnectx$MH = RuntimeHelper.downcallHandle(
        "disconnectx",
        constants$0.disconnectx$FUNC
    );
}



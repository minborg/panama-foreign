// Generated by jextract

package jdk.internal.sys;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class sockaddr_in6 {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_CHAR$LAYOUT.withName("sin6_len"),
        Constants$root.C_CHAR$LAYOUT.withName("sin6_family"),
        Constants$root.C_SHORT$LAYOUT.withName("sin6_port").withOrder(ByteOrder.BIG_ENDIAN),
        Constants$root.C_INT$LAYOUT.withName("sin6_flowinfo").withOrder(ByteOrder.BIG_ENDIAN),
        MemoryLayout.structLayout(
            MemoryLayout.unionLayout(
                MemoryLayout.sequenceLayout(16, Constants$root.C_CHAR$LAYOUT).withName("__u6_addr8"),
                MemoryLayout.sequenceLayout(8, Constants$root.C_SHORT$LAYOUT.withOrder(ByteOrder.BIG_ENDIAN)).withName("__u6_addr16"),
                MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT.withOrder(ByteOrder.BIG_ENDIAN)).withName("__u6_addr32")
            ).withName("__u6_addr")
        ).withName("sin6_addr"),
        Constants$root.C_INT$LAYOUT.withName("sin6_scope_id").withOrder(ByteOrder.BIG_ENDIAN)
    ).withName("sockaddr_in6");
    public static MemoryLayout $LAYOUT() {
        return sockaddr_in6.$struct$LAYOUT;
    }
    static final VarHandle sin6_len$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("sin6_len"));
    public static VarHandle sin6_len$VH() {
        return sockaddr_in6.sin6_len$VH;
    }
    public static byte sin6_len$get(MemorySegment seg) {
        return (byte)sockaddr_in6.sin6_len$VH.get(seg);
    }
    public static void sin6_len$set( MemorySegment seg, byte x) {
        sockaddr_in6.sin6_len$VH.set(seg, x);
    }
    public static byte sin6_len$get(MemorySegment seg, long index) {
        return (byte)sockaddr_in6.sin6_len$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sin6_len$set(MemorySegment seg, long index, byte x) {
        sockaddr_in6.sin6_len$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sin6_family$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("sin6_family"));
    public static VarHandle sin6_family$VH() {
        return sockaddr_in6.sin6_family$VH;
    }
    public static byte sin6_family$get(MemorySegment seg) {
        return (byte)sockaddr_in6.sin6_family$VH.get(seg);
    }
    public static void sin6_family$set( MemorySegment seg, byte x) {
        sockaddr_in6.sin6_family$VH.set(seg, x);
    }
    public static byte sin6_family$get(MemorySegment seg, long index) {
        return (byte)sockaddr_in6.sin6_family$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sin6_family$set(MemorySegment seg, long index, byte x) {
        sockaddr_in6.sin6_family$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sin6_port$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("sin6_port"));
    public static VarHandle sin6_port$VH() {
        return sockaddr_in6.sin6_port$VH;
    }
    public static short sin6_port$get(MemorySegment seg) {
        return (short)sockaddr_in6.sin6_port$VH.get(seg);
    }
    public static void sin6_port$set( MemorySegment seg, short x) {
        sockaddr_in6.sin6_port$VH.set(seg, x);
    }
    public static short sin6_port$get(MemorySegment seg, long index) {
        return (short)sockaddr_in6.sin6_port$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sin6_port$set(MemorySegment seg, long index, short x) {
        sockaddr_in6.sin6_port$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sin6_flowinfo$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("sin6_flowinfo"));
    public static VarHandle sin6_flowinfo$VH() {
        return sockaddr_in6.sin6_flowinfo$VH;
    }
    public static int sin6_flowinfo$get(MemorySegment seg) {
        return (int)sockaddr_in6.sin6_flowinfo$VH.get(seg);
    }
    public static void sin6_flowinfo$set( MemorySegment seg, int x) {
        sockaddr_in6.sin6_flowinfo$VH.set(seg, x);
    }
    public static int sin6_flowinfo$get(MemorySegment seg, long index) {
        return (int)sockaddr_in6.sin6_flowinfo$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sin6_flowinfo$set(MemorySegment seg, long index, int x) {
        sockaddr_in6.sin6_flowinfo$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment sin6_addr$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    static final VarHandle sin6_scope_id$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("sin6_scope_id"));
    public static VarHandle sin6_scope_id$VH() {
        return sockaddr_in6.sin6_scope_id$VH;
    }
    public static int sin6_scope_id$get(MemorySegment seg) {
        return (int)sockaddr_in6.sin6_scope_id$VH.get(seg);
    }
    public static void sin6_scope_id$set( MemorySegment seg, int x) {
        sockaddr_in6.sin6_scope_id$VH.set(seg, x);
    }
    public static int sin6_scope_id$get(MemorySegment seg, long index) {
        return (int)sockaddr_in6.sin6_scope_id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sin6_scope_id$set(MemorySegment seg, long index, int x) {
        sockaddr_in6.sin6_scope_id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}



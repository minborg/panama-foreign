// Generated by jextract

package jdk.internal.include.sys;

import jdk.internal.include.common.Constants$root;
import jdk.internal.include.common.RuntimeHelper;

import java.lang.foreign.MemorySegment;
import java.lang.foreign.ValueLayout;
import java.lang.invoke.MethodHandle;

final class socket_h  {

    private socket_h() {}

    /**
     * {@snippet :
     * #define SAE_ASSOCID_ANY 0
     * }
     */
    static int SAE_ASSOCID_ANY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SAE_CONNID_ANY 0
     * }
     */
    public static int SAE_CONNID_ANY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * typedef unsigned int socklen_t;
     * }
     */
    public static final ValueLayout.OfInt socklen_t = Constants$root.C_INT$LAYOUT;
    public static MethodHandle connect$MH() {
        return RuntimeHelper.requireNonNull(constants$0.connect$MH,"connect");
    }
    /**
     * {@snippet :
     * int connect(int, struct sockadd*, socklen_t);
     * }
     */
    public static int connect(int x0, MemorySegment x1, int x2) {
        var mh$ = connect$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle recvfrom$MH() {
        return RuntimeHelper.requireNonNull(constants$0.recvfrom$MH,"recvfrom");
    }
    /**
     * {@snippet :
     * ssize_t recvfrom(int, void*, size_t, int, struct sockaddr*, socklen_t*);
     * }
     */
    public static long recvfrom(int x0, MemorySegment x1, long x2, int x3, MemorySegment x4, MemorySegment x5) {
        var mh$ = recvfrom$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sendto$MH() {
        return RuntimeHelper.requireNonNull(constants$0.sendto$MH,"sendto");
    }
    /**
     * {@snippet :
     * ssize_t sendto(int, void*, size_t, int, struct sockaddr*, socklen_t);
     * }
     */
    public static long sendto(int x0, MemorySegment x1, long x2, int x3, MemorySegment x4, int x5) {
        var mh$ = sendto$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle disconnectx$MH() {
        return RuntimeHelper.requireNonNull(constants$0.disconnectx$MH,"disconnectx");
    }
    /**
     * {@snippet :
     * int disconnectx(int, sae_associd_t, sae_connid_t);
     * }
     */
    public static int disconnectx(int x0, int x1, int x2) {
        var mh$ = disconnectx$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


